/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int count=0;
        ListNode temp=head;
        while(temp!=null){
            temp=temp.next;
            count++;
        }
        if(count==1){
            return null;
        }
        else if(count==n){
            return head.next;
        }
        int deleteNodevaluePos = count-n;
        int count1 = 0;
        ListNode temp_del = head;
        ListNode prev = temp_del;
        while (count1 < deleteNodevaluePos) {
            prev = temp_del;
            temp_del = temp_del.next;
            count1 = count1 + 1;
        }
        prev.next = temp_del.next;
        return head;
    }
}
